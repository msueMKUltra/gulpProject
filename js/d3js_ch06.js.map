{"version":3,"sources":["d3js_ch06.js"],"names":["$","color","d3","rgb","console","log","append","attr","toString","svg","brighter","darker","hsl","color2","a","b","interpolate","compute","i","line","curve","curveLinearClosed","lines","linePath","y","d","linePath2","x","linePath3","dataset","areaPath","area","defined","y1","y0","areaPath2","areaPath3","curveStep","startAngle","endAngle","Math","PI","arcPath","arc","innerRadius","outerRadius","data","enter","selectAll","centroid","text","floor","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","size","shapes","length","symbol","type","start","end","ribbon","target","endArc","radius","chord","symbolCircle","chord2","diagonal","source","linkVertical","country","gdp","startArc","max","range","xScale","yScale","domain","select","linkHorizontal","tickFormat","format","tickValues","yAxis","axisLeft","call","xAxis"],"mappings":"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","file":"d3js_ch06.js","sourcesContent":["$(function(){\n\tvar color = d3.rgb(40, 80, 0);\n\tconsole.log(color);\n\tconsole.log(color.toString());\n\tvar svg = d3.select('body').append('svg').attr('width', 1000).attr('height', 800);\n\tsvg.append('circle').attr('cx', 100).attr('cy', 100).attr('r', 50).attr('fill', color);\n\tsvg.append('circle').attr('cx', 150).attr('cy', 100).attr('r', 50).attr('fill', color.brighter(2));\n\tsvg.append('circle').attr('cx', 200).attr('cy', 100).attr('r', 50).attr('fill', color.darker(2));\n\tvar color2 = d3.rgb('rgb(40, 80, 0)');\n\tconsole.log(d3.hsl(color2));\n\n\tvar hsl = d3.hsl(120, 1.0, 0.3);\n\tconsole.log(hsl);\n\tconsole.log(hsl.rgb());\n\tsvg.append('circle').attr('cx', 100).attr('cy', 200).attr('r', 50).attr('fill', hsl);\n\tconsole.log(hsl.brighter());\n\tsvg.append('circle').attr('cx', 150).attr('cy', 200).attr('r', 50).attr('fill', hsl.brighter(2));\n\tconsole.log(hsl.darker());\n\tsvg.append('circle').attr('cx', 200).attr('cy', 200).attr('r', 50).attr('fill', hsl.darker(2));\n\n\tvar a = d3.hsl(0, 1, 0.5);\n\tconsole.log(a);\n\tvar b = d3.hsl(120, 1, 0.5);\n\tconsole.log(b);\n\tvar compute = d3.interpolate(a, b);\n\tconsole.log(compute(0));\n\tconsole.log(compute(1));\n\tfor (var i = 0; i < 10; i++) {\n\t\tsvg.append('circle').attr('cx', 100 + i * 50).attr('cy', 300).attr('r', 50).attr('fill', compute(i/10));\n\t}\n\n\tsvg.append('line').attr('x1', 20).attr('y1', 30).attr('x2', 100).attr('y2', 20).attr('stroke', 'black').attr('stroke-width', 3);\n\tsvg.append('path').attr('d', 'M20, 20 L300, 50').attr('stroke', 'black').attr('stroke-width', 2);\n\tvar lines = [[80, 80], [200, 100], [200, 200], [100, 200]];\n\tvar linePath = d3.line().curve(d3.curveLinearClosed); // v3. interpolate('linear-closed') => v4. curve(d3.curveLinearClosed)\n\tsvg.append('g').append('path').attr('d', linePath(lines)).attr('fill', 'transparent').attr('stroke', 'mistyrose').attr('stroke-width', 5);\n\tvar linePath2 = d3.line().x(function(d){ return d[0]*2;}).y(function(d, i){ return i%2 == 0 ? 40 : 120;});\n\tsvg.append('g').append('path').attr('d', linePath2(lines)).attr('fill', 'transparent').attr('stroke', 'tomato').attr('stroke-width', 5);\n\tvar linePath3 = d3.line().defined(function(d){ return d[1] <= 100;}); // 若不是連續的點則不會連起來\n\tsvg.append('g').append('path').attr('d', linePath3(lines)).attr('fill', 'transparent').attr('stroke', 'dodgerblue').attr('stroke-width', 5);\n\n\tvar dataset = [80, 120, 130, 70, 60, 90];\n\tvar areaPath = d3.area()\n\t\t\t\t\t.x(function(d, i){ return 500 + i * 80;})\n\t\t\t\t\t.y0(function(d, i){ return 200;})\n\t\t\t\t\t.y1(function(d, i){ return 200 - d;});\n\tsvg.append('g').append('path').attr('d', areaPath(dataset)).attr('stroke', 'slateblue').attr('stroke-width', 5).attr('fill', 'transparent');\n\tvar areaPath2 = d3.area()\n\t\t\t\t\t.x(function(d, i){ return 500 + i * 80;})\n\t\t\t\t\t.y0(function(d, i){ return 300;})\n\t\t\t\t\t.y1(function(d, i){ return 300 - d;})\n\t\t\t\t\t.curve(d3.curveBasis);\n\tsvg.append('g').append('path').attr('d', areaPath2(dataset)).attr('stroke', 'mediumseagreen').attr('stroke-width', 5).attr('fill', 'transparent');\n\tvar areaPath3 = d3.area()\n\t\t\t\t\t.x(function(d, i){ return 500 + i * 80;})\n\t\t\t\t\t.y0(function(d, i){ return 400;})\n\t\t\t\t\t.y1(function(d, i){ return 400 - d;})\n\t\t\t\t\t.curve(d3.curveStep);\n\tsvg.append('g').append('path').attr('d', areaPath3(dataset)).attr('stroke', 'violet').attr('stroke-width', 5).attr('fill', 'transparent');\n\n\tvar dataset = [{ startAngle: 0, endAngle: Math.PI * 0.6}, { startAngle: Math.PI * 0.6, endAngle: Math.PI}, { startAngle: Math.PI, endAngle: Math.PI * 1.7}, { startAngle: Math.PI * 1.7, endAngle: Math.PI * 2}];\n\tvar arcPath = d3.arc().innerRadius(50).outerRadius(100);\n\tsvg.append('g').selectAll('path').data(dataset).enter().append('path').attr('d', function(d){ return arcPath(d);}).attr('stroke', 'hotpink').attr('stroke-width', 5).attr('fill', 'transparent').attr('transform', 'translate(120, 380)');\n\tsvg.append('g').selectAll('text').data(dataset).enter().append('text').attr('transform', function(d){ return 'translate(120, 380)' + 'translate(' + arcPath.centroid(d) + ')';}).attr('fill', 'black').text(function(d){ return Math.floor((d.endAngle - d.startAngle) * 180 / Math.PI);}).attr('text-anchor', 'middle');\t\n\n\t// v4 符號有七個\n\tvar shapes = [ d3.symbolCircle,\n\t\t\t\t\td3.symbolCross,\n\t\t\t\t\td3.symbolDiamond,\n\t\t\t\t\td3.symbolSquare,\n\t\t\t\t\td3.symbolStar,\n\t\t\t\t\td3.symbolTriangle,\n\t\t\t\t\td3.symbolWye ];\n\tvar symbol = d3.symbol().size(1600);\n\tsvg.append('g').selectAll('path').data(shapes).enter().append('path').attr('transform', (d, i) => 'translate(120, 380)' + 'translate(' + i * 100 + ', 0)').attr('fill', (d, i) => compute(i/(shapes.length - 1))).attr('d', symbol.type( (d) => d )); // symbol.type()要放在外面\n\t// function(d){ return d;} 可改寫成 (d) => d\n\n\t// dataset可自訂屬性名稱，但ribbon設定的參數要加上去\n\tvar dataset = { startArc: {start: 0.2, end: Math.PI * 0.3},\n\t\t\t\t\t\tendArc: {start: Math.PI * 1.0, end: Math.PI * 1.6}};\n\tvar chord = d3.ribbon().source((d) => d.startArc) // v3. d3.svg.chord() => v4. d3.ribbon() (v4.有chord，但用法不同)\n\t\t\t\t\t\t\t.target((d) => d.endArc)\n\t\t\t\t\t\t\t.radius(100) // radius相同，可直接設常數\n\t\t\t\t\t\t\t.startAngle((d) => d.start)\n\t\t\t\t\t\t\t.endAngle((d) => d.end);\n\tsvg.append('g').append('path').attr('d', chord(dataset)).attr('stroke', 'royalblue').attr('stroke-width', 5).attr('fill', 'transparent').attr('transform', 'translate(140, 600)');\n\t// dataset用原始設定的參數，ribbon可直接用\n\tvar dataset = { source: { startAngle: 0.2, endAngle: Math.PI * 0.3, radius: 100},\n\t\t\t\t\t\ttarget: { startAngle: Math.PI * 1.0, endAngle: Math.PI * 1.6, radius: 100}};\n\tvar chord2 = d3.ribbon();\n\tsvg.append('g').append('path').attr('d', chord2(dataset)).attr('stroke', 'rosybrown').attr('stroke-width', 5).attr('fill', 'transparent').attr('transform', 'translate(300, 600)');\n\n\tvar dataset = {source: { x: 500, y: 500}, target: { x: 600, y: 600}};\n\tvar diagonal = d3.linkHorizontal().x(function(d) { return d.x; }).y(function(d) { return d.y; }); // v3. d3.svg.diagonal() => v4. d3.linkHorizontal() or d3.linkVertical()，因為不支援diagonal\n\tsvg.append('g').append('path').attr('d', diagonal(dataset)).attr('stroke', 'yellowgreen').attr('stroke-width', 5).attr('fill', 'transparent');\n\tvar dataset = {source: { x: 400, y: 500}, target: { x: 500, y: 600}};\n\tvar diagonal = d3.linkVertical().x(function(d) { return d.x; }).y(function(d) { return d.y; }); // v3. d3.svg.diagonal() => v4. d3.linkHorizontal() or d3.linkVertical()，因為不支援diagonal\n\tsvg.append('g').append('path').attr('d', diagonal(dataset)).attr('stroke', 'slategray').attr('stroke-width', 5).attr('fill', 'transparent');\n\n\tvar dataset = [\n\t\t{\n\t\t\tcountry: 'china',\n\t\t\tgdp: [[2000, 11920], [2001, 13170], [2002, 14550], [2003, 16500], [2004, 19440], [2005, 22870], [2006, 27930], [2007, 35040], [2008, 45470], [2009, 51050], [2010, 50490], [2011, 73140], [2012, 83860], [2013, 103550]]\n\t\t},\n\t\t{\n\t\t\tcountry: 'japan',\n\t\t\tgdp: [[2000, 47310], [2001, 41590], [2002, 39800], [2003, 43020], [2004, 46500], [2005, 45710], [2006, 43560], [2007, 43560], [2008, 48490], [2009, 50350], [2010, 54950], [2011, 59050], [2012, 59370], [2013, 48980]]\n\t\t}\n\t];\n\tvar max = 0;\n\tfor (var i = dataset.length - 1; i >= 0; i--) {\n\t\tvar gdp = d3.max(dataset[i].gdp, (d) => d[1]);\n\t\tmax = gdp > max ? gdp : max;\n\t}\n\tvar range = d3.range(2000, 2014, 2);\n\tvar line = d3.line().x( (d) => xScale(d[0])).y( (d) => yScale(d[1]));\n\tvar xScale = d3.scaleLinear().domain([1999, 2014]).range([ 0, 500]);\n\tvar yScale = d3.scaleLinear().domain([0, max * 1.1]).range([ 500, 0]);\n\tvar svg = d3.select('body').append('svg').attr('width', 600).attr('height', 600);\n\tsvg.append('g').attr('transform', 'translate( 50, 50)').selectAll('path').data(dataset).enter().append('path').attr('d', (d) => line(d.gdp)).attr('stroke', (d, i) => compute( i % 2 )).attr('stroke-width', 3).attr('fill', 'transparent');\n\tvar xAxis = d3.axisBottom(xScale).tickFormat(d3.format(\"d\")).tickValues(range);\n\tvar yAxis = d3.axisLeft(yScale);\n\tsvg.append('g').attr('transform', 'translate( 50, 550)').call(xAxis);\n\tsvg.append('g').attr('transform', 'translate( 50, 50)').call(yAxis);\n\tsvg.append('g').attr('transform', 'translate( 50, 580)').selectAll('rect').data(dataset).enter().append('rect').attr('width', 10).attr('height', 10).attr('fill', (d, i) => compute( i % 2 )).attr('x', (d, i) => i * 60);\n\tsvg.append('g').attr('transform', 'translate( 50, 580)').selectAll('text').data(dataset).enter().append('text').attr('font-size', 12).attr('fill', 'deepslateGray').attr('x', (d, i) => i * 60 + 14).attr('y', 10).text((d) => d.country);\n});"]}