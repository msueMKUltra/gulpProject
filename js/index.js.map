{"version":3,"sources":["index.js"],"names":["$","listGroupItemHover","$target","$class","find","hover","this","addClass","removeClass","mapFromId","array","id","d3","map","d","get","rendering","cardData004","cardData002","cardData003","$data","rpp","data","svg","width","eq","height","card","select","selectAll","remove","cardSvg","append","attr","month","dataset","dataMax","people","max","rect","step","bottom","left","scaleBand","domain","range","padding","right","bar","linear","top","enter","bandwidth","text","call","axisBottom","axisLeft","ticks","tickFormat","popover","$rollerList","$rollerMap","$rollerTaiwan","$gameAsia","$gameTaiwan","$gameEurope","$gameAmerica","cardData","getCardData","cardDrawing","cardData001","win","window","on","style"],"mappings":"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","file":"index.js","sourcesContent":["$(function(){\n\n\t$('[data-toggle=\"popover\"]').popover();\n\n\tvar $rollerList = $('.roller-list');\n\tvar $rollerTaiwan = $('.roller-taiwan');\n\tvar $rollerForein = $('.roller-forein');\n\tvar $rollerMap = $('.roller-map');\n\n\tvar $gameTaiwan = $('.roller-game-taiwan');\n\tvar $gameAsia = $('.roller-game-asia');\n\tvar $gameAmerica = $('.roller-game-america');\n\tvar $gameEurope = $('.roller-game-europe');\n\n\t$rollerList.hover(function(){\n\t\t$rollerList.removeClass('col-md-6 col-md-2 col-md-3');\n\t\t$(this).addClass('col-md-6')\n\t\t\t.siblings('.roller-list').addClass('col-md-2');\n\t},function(){\n\t\t$rollerList.removeClass('col-md-6 col-md-2').addClass('col-md-3');\n\t});\n\n\n\tfunction listGroupItemHover($target, $class){\n\t\t$target.find('li').hover(function(){\n\t\t\t$(this).addClass($class);\n\t\t},function(){\n\t\t\t$(this).removeClass($class);\n\t\t})\t\t\n\t}\n\n\tlistGroupItemHover($gameTaiwan, 'list-group-item-warning');\n\tlistGroupItemHover($gameAsia, 'list-group-item-danger');\n\tlistGroupItemHover($gameAmerica, 'list-group-item-info');\n\tlistGroupItemHover($gameEurope, 'list-group-item-success');\n\n\t// $rollerTab.click(showMap($(this)));\n\n\t// showMap();\n\n\t// function showMap($click){\n\t// \t$mapTaiwan.hide();\n\t// \t$mapForein.hide();\n\t// \tif($click.hasClass('active')){\n\t// \t\t$mapTaiwan.show();\n\t// \t}else if($click.hasClass('active')){\n\t// \t\t$mapForein.show();\n\t// \t}\t\t\t\t\n\t// }\n\n\tvar cardData = [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '001',\n\t\t\t\t\t\t// total: 12,\n\t\t\t\t\t\tdata:[{month: 'Aug', people: 10}, {month: 'Sep', people: 6}, {month: 'Oct', people: 17}, {month: 'Nov', people: 12}] },\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '002',\n\t\t\t\t\t\t// total: 99,\n\t\t\t\t\t\tdata:[{month: 'Aug', people: 50}, {month: 'Sep', people: 77}, {month: 'Oct', people: 43}, {month: 'Nov', people: 99}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '003',\n\t\t\t\t\t\t// total: 54,\n\t\t\t\t\t\tdata:[{month: 'Aug', people: 81}, {month: 'Sep', people: 71}, {month: 'Oct', people: 69}, {month: 'Nov', people: 54}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: '004',\n\t\t\t\t\t\t// total: 22,\n\t\t\t\t\t\tdata:[{month: 'Aug', people: 4}, {month: 'Sep', people: 7}, {month: 'Oct', people: 15}, {month: 'Nov', people: 22}]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\tfunction getCardData(array, id){\n\t\tvar map = d3.map(array, function(d){ return d.id; }); // 定義map的key值為id\n\t\tvar mapFromId = map.get(id); // 利用id找出對應的object\n\t\treturn mapFromId;\n\t}\n\n\tvar cardData001 = getCardData(cardData, '001');\n\tvar cardData002 = getCardData(cardData, '002');\n\tvar cardData003 = getCardData(cardData, '003');\n\tvar cardData004 = getCardData(cardData, '004');\n\n\tfunction cardDrawing(){\t\t\n\t\trendering('.roller-svg-001', cardData001);\n\t\trendering('.roller-svg-002', cardData002);\n\t\trendering('.roller-svg-003', cardData003);\n\t\trendering('.roller-svg-004', cardData004);\n\t}\n\n\tvar win = d3.select(window);\n\n\tcardDrawing();\n\n\twin.on('resize', cardDrawing);\n\n\tfunction rendering($class, $data){\n\n\t\tvar dataset = $data.data;\n\n\t\tvar rpw = $('.roller-piece').eq(2).width();\n\t\tvar rpp = 30; \n\n\t\tvar svg = {width: rpw - rpp, height: 100};\n\n\t\tvar card = d3.select('.roller-card-zone').select($class);\n\n\t\tcard.selectAll('*').remove();\n\n\t\tvar cardSvg = card.append('svg')\n\t\t\t\t\t\t.attr('width', svg.width)\n\t\t\t\t\t\t.attr('height', svg.height);\n\n\t\t// var map = d3.map(dataset, function(d){ return d.month; });\n\t\t// map.each(function(key, value){ // v3. forEach => v4. each\n\t\t// \tconsole.log(key);\n\t\t// \tconsole.log(value);\n\t\t// });\n\t\t// console.log(map.values());\n\n\t\tvar month = dataset.map(function(d){ return d.month;});\n\t\tvar people = dataset.map(function(d){ return d.people;});\n\t\tvar dataMax = d3.max(people);\n\n\t\tvar padding = { top: 14, right: 20, bottom:20, left: 40};\n\t\tvar rect = { step: 35, width: 30};\n\n\n\t\tvar linear = {\n\t\t\twidth: d3.scaleBand() \n\t\t\t\t\t\t.domain(month)\n\t\t\t\t\t\t.range([ 0, svg.width - padding.left - padding.right])\n\t\t\t\t\t\t.padding(.5),\n\t\t\theight: d3.scaleLinear() // v3. scale.linear() => v4. scaleLinear()\n\t\t\t\t\t\t.domain([0, dataMax])\n\t\t\t\t\t\t.range([svg.height - padding.top - padding.bottom, 0])\n\t\t};\n\n\t\tvar bar = cardSvg.selectAll('rect')\n\t\t\t\t.data(dataset)\n\t\t\t\t.enter()\n\t\t\t\t.append('rect')\n\t\t\t\t.attr('fill', 'steelblue')\n\t\t\t\t.attr('x', function(d){ return linear.width(d.month) + padding.left})\n\t\t\t\t.attr('y', function(d){\n\t\t\t\t\treturn linear.height(d.people) + padding.top;\n\t\t\t\t})\n\t\t\t\t.attr('width', linear.width.bandwidth())\n\t\t\t\t.attr('height', function(d){\n\t\t\t\t\treturn svg.height - padding.top - padding.bottom - linear.height(d.people);\n\t\t\t\t});\n\n\n\t\tvar text = cardSvg.selectAll('text')\n\t\t\t\t.data(dataset)\n\t\t\t\t.enter()\n\t\t\t\t.append('text')\n\t\t\t\t.attr('fill', 'steelblue')\n\t\t\t\t.attr('font-size', '10px')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.attr('x', function(d){ return linear.width(d.month) + padding.left; })\n\t\t\t\t.attr('y', function(d){ return linear.height(d.people) + padding.top; })\n\t\t\t\t.attr('dx', linear.width.bandwidth() / 2)\n\t\t\t\t.attr('dy', -4)\n\t\t\t\t.text(function(d){\n\t\t\t\t\treturn d.people;\n\t\t\t\t});\n\n\t\tcardSvg.append('g').call(d3.axisBottom(linear.width))\n\t\t\t.attr('transform', 'translate(' + padding.left + ',' + (svg.height - padding.bottom) + ')');\n\n\t\tcardSvg.append('g').call(d3.axisLeft(linear.height).ticks(3).tickFormat(function(d){return d+'人';}))\n\t\t\t.attr('transform', 'translate(' + padding.left + ',' + padding.top + ')');\t\n\t}\n\n\t// 在未知資料長度的情況下\n\t// var update = cardSvg.data(cardData); // 綁定資料後，即為update的部分(元素對應資料)\n\t// var enter = update.enter(); // 取出enter的部分(元素小於資料)\n\t// var exit = update.exit(); // 取出exit的部分(元素大於資料)\n\n\t// update.text(function(d){ return d;}); // update資料可直接寫入\n\t// enter.append('p')\n\t// \t.text(function(d){ return d;}); // enter先append元素，再寫入資料\n\t// exit.remove(); // exit直接刪除元素\n\n\t// var linear = d3.scaleLinear() // v3. scale.linear() => v4. scaleLinear()\n\t// \t\t\t\t.domain([0, rect.step * (dataset.length - 1) + rect.width + padding.left + padding.right])\n\t// \t\t\t\t.range([0, 100]);\n\n\n\n\t// this is v3.\n\t// var axis = d3.cardSvg.axis()\n\t// \t\t\t.scale(linear.width)\n\t// \t\t\t.orient('bottom');\n\t// var gAxis = cardSvg.append('g');\n\t// axis(gAxis);\n\n\t// var axis = d3.axisBottom(linear.width);\n\t// var gAxis = cardSvg.append('g');\n\t// axis(gAxis);\n\n\t// d3.axisBottom(linear.width)(cardSvg.append('g'));\n\n\t\t// console.log(linear(100));\n\t\t// console.log(linear.invert(100));\n\t\t// console.log(linear.domain());\n\t\t// console.log(linear.range());\n\n\t\t// linear.domain([10, 450]);\n\t\t// linear.range([50, 200]);\n\n\t\t// console.log(linear(100));\n\t\t// console.log(linear.invert(100));\n\t\t// console.log(linear.domain());\n\t\t// console.log(linear.range());\n\n\t\t// linear.domain([9.99, 450.111]);\n\t\t// linear.nice();\n\t\t// linear.rangeRound([50, 200]);\n\n\t\t// console.log(linear(100));\n\t\t// console.log(linear.invert(100));\n\t\t// console.log(linear.domain());\n\t\t// console.log(linear.range());\n\t\t// console.log(linear.ticks(5));\n\n\t\t//rwd reference\n\t\t//https://kuro.tw/posts/2015/12/20/use-d3js-to-create-responsive-histogram/\n\t\t//==================\n\t\t// var svg = d3.select('.svg');\n\n\t\t// // 將繪製動作包裝至 function 內\n\t\t// function rendering() {\n\t\t//    // 將繪製的程式碼通通搬到裡面\n\t\t//    // 內略\n\t\t// }\n\n\t\t// // 將 window 綁定 resize 事件，並重新繪製圖型\n\t\t// d3.select(window).on('resize', rendering);\n\n\t\t// // 首次繪製\n\t\t// rendering();\n\t\t//==================\n\n\tvar listSvg = d3.select('.roller-list-zone').selectAll('.roller-svg svg');\n\n\tlistSvg.style('width', '100%')\n\t\t.style('height', '200px');\n\n\tvar mapSvg = d3.select('.roller-jumbotron-zone').selectAll('.roller-svg svg');\n\n\tmapSvg.style('width', '100%')\n\t\t.style('height', '200px');\n})"]}