{"version":3,"sources":["compass.js"],"names":["$","randomize","rds","c","Math","n","map","log","d","normal","x","y","test","deviation","mean","random","sqrt","normal3","normal1","push","length","NaN","m","i","s","variance","v","margin","top","right","bottom","left","height","chart","d3","qq","width","domain","tickFormat","vis","select","append","attr","json","error","td","turkers","tm","g","selectAll","range","call","label","enter","datum","node","text","duration","Number","window","transition","cx","console","dataset","each","textTmp","this","cy","raw","round","on","areaPath","svg","area","nodeTmp","style","remove","areaTmp","firstname","lastname","persons","func","div","document","createElement","appendTo"],"mappings":"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","file":"compass.js","sourcesContent":["$(function(){\n  var test = [];\n\t\nvar width = 270,\n    height = 270,\n    margin = {top: 20, right: 10, bottom: 20, left: 35},\n    n = 10000; // number of samples to generate\n\nvar chart = d3.qq()\n    .width(width)\n    .height(height)\n    .domain([-.1, 1.1])\n    .tickFormat(function(d) { return ~~(d * 100); }); // ~~ 等於Math.floor\n\nvar vis = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", (width + margin.right + margin.left) * 3)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.json(\"./json/turkers.json\", function(error, turkers) {\n  if (error) throw error;\n\n  var tm = mean(turkers),\n      td = Math.sqrt(variance(turkers)),\n      dd = [\n        [0.10306430789206111, 0.0036139086950272735, 0.30498647327844536],\n        [0.5924252668569606, 0.0462763685758622, 0.4340870312025223],\n        [0.9847627827855167, 2.352350767874714e-4, 0.2609264955190324]\n      ];\n  console.log(d3.range(n));\n\n\n  var g = vis.selectAll(\"g\")\n      .data([{\n        x: d3.range(n).map(normal1(tm, td)),\n        y: turkers,\n        label: \"Gaussian (Normal) Distribution\"\n      }])\n    .enter().append(\"g\")\n      .attr(\"class\", \"qq\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + (width + margin.right + margin.left) * i + \")\"; });\n\n      console.log(test);\n\n  g.append(\"rect\")\n      .attr(\"class\", \"box\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  g.call(chart);\n\n  g.append(\"text\")\n      .attr(\"dy\", \"1.3em\")\n      .attr(\"dx\", \".6em\")\n      .text(function(d) { return d.label; });\n\n  chart.duration(1000);\n\n  window.transition = function() {\n    g.datum(randomize).call(chart);\n  };\n\n  // d3.select('.box').style('fill', 'blue');\n  // d3.selectAll('.quantile').style('stroke', 'white').style('fill', 'slateblue');\n  d3.selectAll('.quantile').each(function(d, i){\n    // d3.select(this);\n    // node.style('cx', 0).style('cy', 0);\n    // console.log(d3.select(this));\n    var node = d3.select(this);\n    var qq = d3.select('.qq');\n    var cx = Number(node.attr('data-x'));\n    var cy = Number(node.attr('data-y'));\n    var raw = Math.round(node.attr('data-raw')*100)/100;\n    var dataset = [[cx, cy, cy - 10], [cx + 10, cy, cy - 10], [cx + 10, cy + 6, cy - 16], [cx + 20, cy - 5, cy - 5]];\n    console.log(dataset);\n    var nodeTmp, textTmp, areaTmp;\n    // console.log(node.style('transform'));\n\n    // nodeTr.transition().duration(2000).style('cx', cx).style('cy', cy);\n    node.on(\"mouseover\", function(){\n      // node.style('r', 12)\n      //   .style('stroke', 'slateblue').style('fill', 'white');\n      var areaPath = d3.svg.area()\n          .x( (d) => d[0] + 10)\n          .y0( (d) => d[1] + 6 )\n          .y1( (d) => d[2] + 6 );\n      areaTmp = qq.append('path').attr('d', areaPath(dataset)).attr('fill', 'violet');\n      textTmp = qq.append('text').attr('x', cx + 32).attr('y', cy + 5).attr('text-anchor', 'start').attr('font-size', '12px').text(raw).attr('fill', 'hotpink');\n      nodeTmp = qq.append(() => node.node()).style('r', 12)\n        .style('stroke', 'blueviolet').style('fill', 'white');\n      // d3.svg.area()\n      //     .x(function(d, i){ return 500 + i * 80;})\n      //     .y0(function(d, i){ return 400;})\n      //     .y1(function(d, i){ return 400 - d;});\n    });\n    node.on(\"mouseout\", function(){\n      nodeTmp.style('r', 6)\n        .style('stroke', 'white').style('fill', 'slateblue');\n      textTmp.remove();\n      areaTmp.remove();\n    });\n  });\n\n\n\n});\n\nfunction randomize(d) {\n  d.y = d3.range(n).map(Math.random);\n  return d;\n}\n\n// Sample from a normal distribution with mean 0, stddev 1.\nfunction normal() {\n  var x = 0, y = 0, rds, c;\n  do {\n    x = Math.random() * 2 - 1;\n    y = Math.random() * 2 - 1;\n    rds = x * x + y * y;\n  } while (rds == 0 || rds > 1);\n  c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform\n  return x * c; // throw away extra sample y * c\n}\n\n\n// Simple 1D Gaussian (normal) distribution\nfunction normal1(mean, deviation) {\n  return function() {\n    test.push(mean + deviation + normal());\n    return mean + deviation * normal();\n  };\n}\n\n// Gaussian Mixture Model (k=3) fit using E-M algorithm\nfunction normal3(dd) {\n  return function() {\n    var r = Math.random(),\n        i = r < dd[0][2] ? 0 : r < dd[0][2] + dd[1][2] ? 1 : 2,\n        d = dd[i];\n    return d[0] + Math.sqrt(d[1]) * normal();\n  }\n}\n\n// Welford's algorithm.\nfunction mean(x) {\n  var n = x.length;\n  if (n === 0) return NaN;\n  var m = 0,\n      i = -1;\n  while (++i < n) m += (x[i] - m) / (i + 1);\n  return m;\n}\n\n// Unbiased estimate of a sample's variance.\n// Also known as the sample variance, where the denominator is n - 1.\nfunction variance(x) {\n  var n = x.length;\n  if (n < 1) return NaN;\n  if (n === 1) return 0;\n  var m = mean(x),\n      i = -1,\n      s = 0;\n  while (++i < n) {\n    var v = x[i] - m;\n    s += v * v;\n  }\n  return s / (n - 1);\n}\n\nfunction a() {\n  return function(){\n    return 3 * 3;\n  };\n}\n\nvar s = a;\n// alert('break');\n// alert(s());\n\nvar persons = [\n    {firstname : \"Malcom\", lastname: \"Reynolds\"},\n    {firstname : \"Kaylee\", lastname: \"Frye\"},\n    {firstname : \"Jayne\", lastname: \"Cobb\"}\n];\nfunction func(a, b){\n  console.log(a);\n  console.log(b);\n  console.log(this);\n  var div = document.createElement('div');\n  console.log(div);\n  var divv = $(div).appendTo(this);\n  console.log(divv);\n}\n// persons.map(function(c, i, a){\n//   console.log(c);\n//   console.log(i);\n//   console.log(a);\n//   console.log(persons);\n// });\n\npersons.map(func, $('body'));\n\n});"]}