{"version":3,"sources":["gooee.js"],"names":["$","queue","defer","d3","json","gooee","error","awaitAll","width","files","calcMidPoint","x","y","cx","cy","end","count","data_B","key","getEnd","map","get","radius","getStart","location","midPoint","svg","select","dataset","height","xyScale","scaleLinear","r","start","arrowX","unit","p","max","section","data_C","domain","range","name_map","id","name","d","rRange","rScaleRange","rScale","scaleQuantize","i","scaleOrdinal","attr","append","mx","aScale","my","pRange","pScale","cScale","color","interpolate","log","selectAll","drag","push","lines","keys","linePath","on","$this","this","dragged","event","$g","invert","dragEnded","g","linkHor","linkHorizontal","data","linkVer","linkVertical","length","$id","line","enter","circle","call","text"],"mappings":"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","file":"gooee.js","sourcesContent":["$(function(){\n\n\td3.queue()\n\t\t.defer(d3.json, \"./files/gooee/name_map.json\")\n\t\t.defer(d3.json, \"./files/gooee/location.json\")\n\t\t.defer(d3.json, \"./files/gooee/data_C.json\")\n\t\t.defer(d3.json, \"./files/gooee/data_B.json\")\n\t\t.awaitAll(gooee);\n\n\tfunction gooee(error, files){\n    \tif (error) throw error;\n\n\t\tvar unit = {width: 1000, height: 1000};\n\t\tvar svg = d3.select('svg')\n\t\t\t\t\t.attr('width', unit.width)\n\t\t\t\t\t.attr('height', unit.height)\n\t\t\t\t\t.style('background-color', 'steelblue');\n\n\t\tvar dataset = [];\n\t\tvar xyScale = d3.scaleLinear().domain([0, 100]).range([0, 1000]);\n\t\tvar r = {max: 0, start: 4, section: 4, range: 6};\n\t\tvar arrowX = [ 7, 8.5, 10, 11.5]; // r的section有幾個，元素就有幾個，對應設定arrow的x偏移\n\t\tvar p = {max: 0, start: 1, section: 4, range: 1};\n\t\tvar name_map = files[0];\n\t\tvar location = files[1];\n\t\tvar data_C = files[2];\n\t\tvar data_B = files[3];\n\n\t\t//name_map.json\n    \tfor( var key in name_map){\n    \t\tvar name = name_map[key];\n    \t\tdataset.push({\n    \t\t\tid: key,\n    \t\t\tname: name\n    \t\t});\n    \t\t// svg.append('g').attr('data-id', key).attr('id', name);\n    \t}\n    \tvar map = d3.map(dataset, (d) => d.id);\n\n    \t//location.json\n\t\tfor( var key in location){\n    \t\tvar cx = location[key][0];\n    \t\tvar cy = location[key][1];\n    \t\tvar get = map.get(key);\n    \t\tvar name = get.name;\n    \t\tget.location = {cx: cx, cy: cy};\n    \t\t// d3.select('#' + name).append('circle').attr('cx', xyScale(cx)).attr('cy', xyScale(cy));\n    \t}\n    \t\n    \t//data_C.json\n\t\tfor( var key in data_C){\n    \t\tvar radius = data_C[key];\n    \t\tvar get = map.get(key);\n    \t\tvar name = get.name;\n    \t\tmap.get(key).radius = radius;\n    \t\tmap.get(key).end = []; // for saving data_B  \t\t\n    \t\t// d3.select('#' + name).select('circle').attr('r', radius/100);\n    \t\tr.max = radius > r.max ? radius : r.max;\n    \t}\n\t\tvar rRange = d3.range(r.start, r.start + r.section * r.range, r.range);\n\t\tvar rScale = d3.scaleQuantize().domain([0, r.max]).range(rRange);\n\t\tvar rScaleRange = rScale.range();\n\t\tvar aScale = d3.scaleOrdinal().domain(rScale.range()).range(arrowX);\n\n\t\t//add arrow marker\n\t\tfor (var i = 0; i < rScaleRange.length; i++) {\t\t\n\t\t\tsvg.append('defs').append('marker')\n\t\t\t\t.attr('id', 'arrow' + rScaleRange[i])\n\t\t\t\t.attr('markerUnits', 'userSpaceOnUse')\n\t\t\t\t.attr('markerWidth', '32')\n\t\t\t\t.attr('markerHeight', '32')\n\t\t\t\t.attr('viewBox', '0 0 8 8')\n\t\t\t\t.attr('refX', aScale(rScaleRange[i]))\n\t\t\t\t.attr('refY', '4')\n\t\t\t\t.attr('orient', 'auto')\n\t\t\t\t.append('path')\n\t\t\t\t.attr('d', 'M2,2 L6,4 L2,6 L3,4 L2,2')\n\t\t\t\t.attr('fill', 'white');\n\t\t}\n\n\n\t\tfunction calcMidPoint(x, y, cx, cy){\n\t\t\t// var distance = Math.sqrt( Math.pow(x - cx, 2) + Math.pow(y - cy, 2));\n\t\t\t// var edge = distance/Math.sqrt(2);\n    \t\t// var mx = x > cx ? cx + edge : x + edge;\n    \t\t// var my = y > cy ? cy + edge : y + edge;\n\t\t\tif(x > cx){\n\t\t\t\tvar mx = y > cy ? x : cx;\n\t\t\t}else{\n\t\t\t\tvar mx = y > cy ? cx : x;\n\t\t\t}\n\t\t\tif(y > cy){\n\t\t\t\tvar my = x > cx ? cy : y;\n\t\t\t}else{\n\t\t\t\tvar my = x > cx ? y : cy;\n\t\t\t}\n    \t\treturn [mx, my];\n\t\t}\n\n\t\t//data_B.json\n\t\tfor( var key in data_B){\n    \t\tvar start = data_B[key].start, end = data_B[key].end, count = data_B[key].count;\n    \t\tvar getStart = map.get(start), getEnd = map.get(end);\n    \t\tvar id = getEnd.name;\n    \t\tvar radius = getEnd.radius;\n    \t\tvar x = getStart.location.cx;\n    \t\tvar y = getStart.location.cy;\n    \t\tvar cx = getEnd.location.cx;\n    \t\tvar cy = getEnd.location.cy;\n    \t\tvar midPoint = calcMidPoint(x, y, cx, cy);\n    \t\tgetStart.end.push({ lines: [[x, y], midPoint, [cx, cy]], count: count, id: id, radius: radius});\n    \t\t// getStart.end.push({ lines: {source: { x: getStart.location.cx, y:getStart.location.cy}, target:{ x: cx, y: cy}}, count: count, id: id});\n    \t\tp.max = count > p.max ? count : p.max;\n    \t}\n\t\tvar pRange = d3.range(p.start, p.start + p.section * p.range, p.range);\n\t\tvar pScale = d3.scaleQuantize().domain([0, p.max]).range(pRange);\n\t\tvar cScale = d3.scaleQuantize().domain([0, p.max]).range(d3.range(p.section));\n\t\tvar color = d3.interpolate('yellowgreen', 'indianred');\n\t\tconsole.log(dataset);\n\n\t\tvar drag = d3.drag()\n\t\t    .on(\"start\", dragStarted)\n\t\t    .on(\"drag\", dragged)\n\t\t    .on(\"end\", dragEnded);\n\n\t\tvar g = svg.selectAll('g')\n\t\t\t\t\t.data(dataset)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('g')\n\t\t\t\t\t.attr('data-code', (d) => d.id)\n\t\t\t\t\t.attr('id', (d) => d.name);\n\n\t\tvar keys = map.keys();\n\t\tfor(var i = 0; i < keys.length; i++){\n\t\t\tvar get = map.get(keys[i]);\n\t\t\tvar lines = get.end;\n\t\t\tvar id = get.name;\n\t\t\tvar linePath = d3.line().curve(d3.curveBundle.beta(0.5)).x((d) => xyScale(d[0])).y((d) => xyScale(d[1]));\n\t\t\tvar linkHor = d3.linkHorizontal().x((d) => xyScale(d.x)).y((d) => xyScale(d.y));\n\t\t\tvar linkVer = d3.linkVertical().x((d) => xyScale(d.x)).y((d) => xyScale(d.y));\n\t\t\tvar $id = d3.select('#' + id);\n\t\t\t\n\t\t\t$id.selectAll('path')\n\t\t\t\t.data(lines)\n\t\t\t\t.enter()\n\t\t\t\t.append('path')\n\t\t\t\t.attr('class', (d) => d.id)\n\t\t\t\t.attr('d', (d) => linePath(d.lines))\n\t\t\t\t// .attr('d', (d) => chooseLink(d.lines))\n\t\t\t\t.attr('stroke', (d) => color(cScale(d.count)/(p.section - 1)))\n\t\t\t\t.attr('stroke-width', (d) => pScale(d.count))\n\t\t\t\t.attr('fill', 'none')\n\t\t\t\t.attr('marker-end', (d) => 'url(#arrow' + rScale(d.radius) + ')');\n\t\t}\n\n\t\tfunction chooseLink(d){\n\t\t\tif(d.source.y > d.target.y){\n\t\t\t\treturn linkHor(d);\n\t\t\t}else{\n\t\t\t\treturn linkVer(d);\n\t\t\t}\n\t\t}\n\n\t\tvar circle = svg.selectAll('cilcle')\n\t\t\t\t\t\t.data(dataset)\n\t\t\t\t\t\t.enter()\n\t\t\t\t\t\t.append('circle')\n\t\t\t\t\t\t.attr('cx', (d) => xyScale(d.location.cx))\n\t\t\t\t\t\t.attr('cy', (d) => xyScale(d.location.cy))\n\t\t\t    \t\t.attr('r', (d) => rScale(d.radius))\n\t\t\t    \t\t.attr('data-id', (d) => d.name)\n\t\t\t    \t\t.call(drag);\n\n\t\tvar text = g.append('text')\n\t\t\t\t\t\t.attr('x', (d) => xyScale(d.location.cx) + rScale(d.radius))\n\t\t\t\t\t\t.attr('y', (d) => xyScale(d.location.cy) - rScale(d.radius))\n\t\t\t    \t\t.attr('fill', 'ivory')\n\t\t\t    \t\t.text( (d) => d.name)\n\n\t\tcircle.on('mouseover', function(){\n\t\t\tvar id = d3.select(this).attr('data-id');\n\t\t\td3.select('#' + id).select('text').text( (d) => d.name + ' (' + d.id + ')');\n\t\t});\n\t\tcircle.on('mouseout', function(){\n\t\t\tvar id = d3.select(this).attr('data-id');\n\t\t\td3.select('#' + id).select('text').text( (d) => d.name);\n\t\t});\n\n\n\t\tfunction dragStarted(d){\n\t\t\t// d3.select(this.parentNode).raise().classed(\"active\", true);\n\t\t}\n\t\tfunction dragged(d){\n\t\t\tvar $this = d3.select(this);\n\t\t\tvar id = $this.attr('data-id');\n\t\t\tvar $g = d3.select('#' + id);\n\t\t\t$this.attr(\"cx\", d3.event.x)\n\t\t\t    .attr(\"cy\", d3.event.y);\n\t\t\t$g.select('text')\n\t\t\t\t.attr(\"x\", (d) => d3.event.x + rScale(d.radius))\n\t\t\t    .attr(\"y\",(d) => d3.event.y - rScale(d.radius));\n\t\t\t$g.selectAll('path')\n\t\t\t\t.attr('d', function(d){\n\t\t\t\t\t\t\t\td.lines[0][0] = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\td.lines[0][1] = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\tvar midPoint = calcMidPoint(d.lines[0][0], d.lines[0][1], d.lines[2][0], d.lines[2][1]);\n\t\t\t\t\t\t\t\td.lines[1][0] = midPoint[0];\n\t\t\t\t\t\t\t\td.lines[1][1] = midPoint[1];\n\t\t\t\t\t\t\t\treturn linePath(d.lines);\n\t\t\t\t\t\t\t\t// d.lines.source.x = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\t// d.lines.source.y = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\t// return chooseLink(d.lines);\n\t\t\t\t\t\t\t});\n\t\t\td3.selectAll('.' + id)\n\t\t\t\t.attr('d', function(d){\n\t\t\t\t\t\t\t\td.lines[2][0] = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\td.lines[2][1] = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\tvar midPoint = calcMidPoint(d.lines[0][0], d.lines[0][1], d.lines[2][0], d.lines[2][1]);\n\t\t\t\t\t\t\t\td.lines[1][0] = midPoint[0];\n\t\t\t\t\t\t\t\td.lines[1][1] = midPoint[1];\n\t\t\t\t\t\t\t\treturn linePath(d.lines);\n\t\t\t\t\t\t\t\t// d.lines.target.x = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\t// d.lines.target.y = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\t// return chooseLink(d.lines);\n\t\t\t\t\t\t\t});\n\t\t}\n\t\tfunction dragEnded(d){\n\t\t\td3.select(this).classed(\"active\", false);\n\t\t}\n\n\t\t// function addMidPoint(array, percent){\n\t\t// \tvar m, x, y;\n\t\t// \tif(x1 == x2){\n\t\t// \t\tif(y1 > y2){\n\t\t// \t\t\ty = y2 + (y1 - y2)/2;\n\t\t// \t\t\tx = x2 + 2;\n\t\t// \t\t}else if(y1 < y2){\n\t\t// \t\t\ty = y1 + (y2 - y1)/2;\n\t\t// \t\t\tx = x1 - 2;\n\t\t// \t\t}else{\n\t\t// \t\t\ty = y1;\n\t\t// \t\t\tx = x1;\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tm = (y2 - y1)/(x2 - x1);\n\t\t// \t\tm = -1 / m;\n\t\t// \t}\n\t\t// }\n\t\t\n\t\t$('[data-id=\"N8\"]').attr('fill', 'gold');\n\t}\n});"]}