{"version":3,"sources":["gooee.js"],"names":["$","queue","defer","d3","json","gooee","error","awaitAll","width","files","svg","select","unit","height","attr","style","data_C","data_B","domain","range","r","max","start","section","p","name_map","location","key","dataset","id","name","map","d","cx","get","cy","radius","rRange","rScale","getStart","getEnd","end","count","push","lines","pScale","scaleQuantize","pRange","cScale","color","interpolate","console","drag","g","text","this","raise","classed","on","$g","parentNode","circle","event","x","y","selectAll","xyScale","invert","dragStarted","linePath","data","keys","append","i","length","linkHor","linkHorizontal","linkVertical","linkVer","enter","$id","target","call"],"mappings":"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","file":"gooee.js","sourcesContent":["$(function(){\n\n\td3.queue()\n\t\t.defer(d3.json, \"./json/gooee/name_map.json\")\n\t\t.defer(d3.json, \"./json/gooee/location.json\")\n\t\t.defer(d3.json, \"./json/gooee/data_C.json\")\n\t\t.defer(d3.json, \"./json/gooee/data_B.json\")\n\t\t.awaitAll(gooee);\n\n\tfunction gooee(error, files){\n    \tif (error) throw error;\n\n\t\tvar unit = {width: 1000, height: 1000};\n\t\tvar svg = d3.select('svg')\n\t\t\t\t\t.attr('width', unit.width)\n\t\t\t\t\t.attr('height', unit.height)\n\t\t\t\t\t.style('background-color', 'lightgray');\n\n\t\t//add arrow mark\n\t\t// svg.append('defs').append('marker')\n\t\t// \t.attr('id', 'arrow')\n\t\t// \t.attr('markerUnits', 'strokeWidth')\n\t\t// \t.attr('markerWidth', '12')\n\t\t// \t.attr('markerHeight', '12')\n\t\t// \t.attr('viewBox', '0 0 12 12')\n\t\t// \t.attr('refx', '6')\n\t\t// \t.attr('refy', '6')\n\t\t// \t.attr('orient', 'auto')\n\t\t// \t.append('path')\n\t\t// \t\t.attr('d', 'M2,2 L10,6 L2,10 L6,6 L2,2').attr('fill', 'brown');\n\n\t\tvar dataset = [];\n\t\tvar xyScale = d3.scaleLinear().domain([0, 100]).range([0, 1000]);\n\t\tvar r = {max: 0, start: 4, section: 4, range: 6};\n\t\tvar p = {max: 0, start: 2, section: 4, range: 2};\n\t\tvar name_map = files[0];\n\t\tvar location = files[1];\n\t\tvar data_C = files[2];\n\t\tvar data_B = files[3];\n\n\t\t//name_map.json\n    \tfor( var key in name_map){\n    \t\tvar name = name_map[key];\n    \t\tdataset.push({\n    \t\t\tid: key,\n    \t\t\tname: name\n    \t\t});\n    \t\t// svg.append('g').attr('data-id', key).attr('id', name);\n    \t}\n    \tvar map = d3.map(dataset, (d) => d.id);\n\n    \t//location.json\n\t\tfor( var key in location){\n    \t\tvar cx = location[key][0];\n    \t\tvar cy = location[key][1];\n    \t\tvar get = map.get(key);\n    \t\tvar name = get.name;\n    \t\tget.location = {cx: cx, cy: cy};\n    \t\t// d3.select('#' + name).append('circle').attr('cx', xyScale(cx)).attr('cy', xyScale(cy));\n    \t}\n    \t\n    \t//data_C.json\n\t\tfor( var key in data_C){\n    \t\tvar radius = data_C[key];\n    \t\tvar get = map.get(key);\n    \t\tvar name = get.name;\n    \t\tmap.get(key).radius = radius;\n    \t\tmap.get(key).end = []; // for saving data_B  \t\t\n    \t\t// d3.select('#' + name).select('circle').attr('r', radius/100);\n    \t\tr.max = radius > r.max ? radius : r.max;\n    \t}\n\t\tvar rRange = d3.range(r.start, r.start + r.section * r.range, r.range);\n\t\tvar rScale = d3.scaleQuantize().domain([0, r.max]).range(rRange);\n\n\t\t//data_B.json\n\t\tfor( var key in data_B){\n    \t\tvar start = data_B[key].start, end = data_B[key].end, count = data_B[key].count;\n    \t\tvar getStart = map.get(start), getEnd = map.get(end);\n    \t\tvar id = getEnd.name;\n    \t\tvar cx = getEnd.location.cx;\n    \t\tvar cy = getEnd.location.cy;\n    \t\tgetStart.end.push({ lines: [[getStart.location.cx, getStart.location.cy], [cx, cy]], count: count, id: id});\n    \t\t// getStart.end.push({ lines: {source: { x: getStart.location.cx, y:getStart.location.cy}, target:{ x: cx, y: cy}}, count: count, id: id});\n    \t\tp.max = count > p.max ? count : p.max;\n    \t}\n\t\tvar pRange = d3.range(p.start, p.start + p.section * p.range, p.range);\n\t\tvar pScale = d3.scaleQuantize().domain([0, p.max]).range(pRange);\n\t\tvar cScale = d3.scaleQuantize().domain([0, p.max]).range(d3.range(p.section));\n\t\tvar color = d3.interpolate('yellowgreen', 'darkred');\n\t\tconsole.log(dataset);\n\n\t\tvar drag = d3.drag()\n\t\t    .on(\"start\", dragStarted)\n\t\t    .on(\"drag\", dragged)\n\t\t    .on(\"end\", dragEnded);\n\n\t\tvar g = svg.selectAll('g')\n\t\t\t\t\t.data(dataset)\n\t\t\t\t\t.enter()\n\t\t\t\t\t.append('g')\n\t\t\t\t\t.attr('data-code', (d) => d.id)\n\t\t\t\t\t.attr('id', (d) => d.name);\n\n\t\tvar keys = map.keys();\n\t\tfor(var i = 0; i < keys.length; i++){\n\t\t\tvar get = map.get(keys[i]);\n\t\t\tvar lines = get.end;\n\t\t\tvar id = get.name;\n\t\t\tvar linePath = d3.line().curve(d3.curveCardinal).x((d) => xyScale(d[0])).y((d) => xyScale(d[1]));\n\t\t\tvar linkHor = d3.linkHorizontal().x((d) => xyScale(d.x)).y((d) => xyScale(d.y));\n\t\t\tvar linkVer = d3.linkVertical().x((d) => xyScale(d.x)).y((d) => xyScale(d.y));\n\t\t\tvar $id = d3.select('#' + id);\n\t\t\t\n\t\t\t$id.selectAll('path')\n\t\t\t\t.data(lines)\n\t\t\t\t.enter()\n\t\t\t\t.append('path')\n\t\t\t\t.attr('class', (d) => d.id)\n\t\t\t\t.attr('d', (d) => linePath(d.lines))\n\t\t\t\t// .attr('d', (d) => chooseLink(d.lines))\n\t\t\t\t.attr('stroke', (d) => color(cScale(d.count)/(p.section - 1)))\n\t\t\t\t.attr('stroke-width', (d) => pScale(d.count))\n\t\t\t\t.attr('fill', 'none')\n\t\t\t\t.attr('marker-end', 'url(#arrow)');\n\t\t}\n\n\t\tfunction chooseLink(d){\n\t\t\tif(d.source.y > d.target.y){\n\t\t\t\treturn linkHor(d);\n\t\t\t}else{\n\t\t\t\treturn linkVer(d);\n\t\t\t}\n\t\t}\n\n\t\tvar circle = g.append('circle')\n\t\t\t\t\t\t.attr('cx', (d) => xyScale(d.location.cx))\n\t\t\t\t\t\t.attr('cy', (d) => xyScale(d.location.cy))\n\t\t\t    \t\t.attr('r', (d) => rScale(d.radius))\n\t\t\t    \t\t.call(drag);\n\n\t\tvar text = g.append('text')\n\t\t\t\t\t\t.attr('x', (d) => xyScale(d.location.cx) + rScale(d.radius))\n\t\t\t\t\t\t.attr('y', (d) => xyScale(d.location.cy) - rScale(d.radius))\n\t\t\t    \t\t// .attr('text-anchor', 'start')\n\t\t\t    \t\t.text( (d) => d.name);\n\n\t\tcircle.on('mouseover', function(){\n\t\t\td3.select(this.parentNode).select('text').text( (d) => d.name + ' (' + d.id + ')');\n\t\t});\n\t\tcircle.on('mouseout', function(){\n\t\t\td3.select(this.parentNode).select('text').text( (d) => d.name);\n\t\t});\n\n\n\t\tfunction dragStarted(d){\n\t\t\td3.select(this.parentNode).raise().classed(\"active\", true);\n\t\t}\n\t\tfunction dragged(d){\n\t\t\tvar $g = d3.select(this.parentNode)\n\t\t\tvar id = $g.attr('id');\n\t\t\td3.select(this)\n\t\t\t\t.attr(\"cx\", d3.event.x)\n\t\t\t    .attr(\"cy\", d3.event.y);\n\t\t\t$g.select('text')\n\t\t\t\t.attr(\"x\", (d) => d3.event.x + rScale(d.radius))\n\t\t\t    .attr(\"y\",(d) => d3.event.y - rScale(d.radius));\n\t\t\t$g.selectAll('path')\n\t\t\t\t.attr('d', function(d){\n\t\t\t\t\t\t\t\td.lines[0][0] = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\td.lines[0][1] = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\treturn linePath(d.lines);\n\t\t\t\t\t\t\t\t// d.lines.source.x = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\t// d.lines.source.y = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\t// return chooseLink(d.lines);\n\t\t\t\t\t\t\t});\n\t\t\td3.selectAll('.' + id)\n\t\t\t\t.attr('d', function(d){\n\t\t\t\t\t\t\t\td.lines[1][0] = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\td.lines[1][1] = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\treturn linePath(d.lines);\n\t\t\t\t\t\t\t\t// d.lines.target.x = xyScale.invert(d3.event.x);\n\t\t\t\t\t\t\t\t// d.lines.target.y = xyScale.invert(d3.event.y);\n\t\t\t\t\t\t\t\t// return chooseLink(d.lines);\n\t\t\t\t\t\t\t});\n\t\t}\n\t\tfunction dragEnded(d){\n\t\t\td3.select(this).classed(\"active\", false);\n\t\t}\n\n\t\t// function addMidPoint(array, percent){\n\t\t// \tvar m, x, y;\n\t\t// \tif(x1 == x2){\n\t\t// \t\tif(y1 > y2){\n\t\t// \t\t\ty = y2 + (y1 - y2)/2;\n\t\t// \t\t\tx = x2 + 2;\n\t\t// \t\t}else if(y1 < y2){\n\t\t// \t\t\ty = y1 + (y2 - y1)/2;\n\t\t// \t\t\tx = x1 - 2;\n\t\t// \t\t}else{\n\t\t// \t\t\ty = y1;\n\t\t// \t\t\tx = x1;\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tm = (y2 - y1)/(x2 - x1);\n\t\t// \t\tm = -1 / m;\n\t\t// \t}\n\t\t// }\n\t\t\n\t\td3.select('#N8').select('circle').attr('fill', 'coral');\n\t}\n});"]}