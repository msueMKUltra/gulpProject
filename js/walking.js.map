{"version":3,"sources":["walking.js"],"names":["$","scatterPlot","update","data","dataset","selectAll","enter","transition","attr","xScale","x","d","i","yScale","y","rScale","datalength","length","append","circleColor2","duration","d3","select","svg","text","parseInt","preScale","f","classed","remove","location","empty","split","xInter","interpolateRound","unit","width","padding","$line","svg2","xScale2","scaleLinear","rScale2","scaleQuantile","oScale2","xAxis2","axisBottom","tickValues","yAxis2","axisRight","range","xGrid2","t","yInter","unit2","linePlot","noOneCircle","trans","g2","lineset","linePath","yScale2","circleColor","ease","p","pInter","enterPath","filter","piePlot","dataset2","dataset3","$coordinate","height","outer","node","getTotalLength","radius2","radius3","easeLinear","on","endAngle","PI","dataset1","pie2","Math","pie3","startAngle","this","arc2","innerRadius","arc3","arc","inner","g","pie","g3","piePlot2","$percentage","space","tween","fInter","exit","pathLength","getRandomData","random","shift","push","start","end","textColor","$scatter","domain","yGrid","tickFormat","tickSize","scale","call","xGrid","width2","format","setInterval","win","window","resize","trigger"],"mappings":"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","file":"walking.js","sourcesContent":["$(function(){\n\tvar dataset = [];\n\tvar lineset = [];\n\tvar circleColor = 'violet';\n\tvar circleColor2 = 'DarkTurquoise';\n\tvar textColor = '#C3C6CC';\n\tvar duration = 2000;\n\tvar datalength = 10;\n\tvar $scatter = $('.roller-scatter-chart');\n\tvar width = $scatter.width();\n\tvar unit = {width: width, height: width, padding: width/10}\n\tvar svg = d3.select('.roller-scatter-chart').append('svg').attr('preserveAspectRatio', 'xMidYMid meet').attr('viewBox', '0 0 ' + unit.width + ' ' + unit.height)\n\t\t\t\t.append('g').attr('transform', 'translate(' + unit.padding + ',' + unit.padding + ')');\n\tvar xScale = d3.scaleLinear().domain([0, 32]).range([0, unit.width - unit.padding * 2]);\n\tvar yScale = d3.scaleLinear().domain([0, 32]).range([unit.height - unit.padding * 2, 0]);\n\tvar rScale = d3.scaleQuantile().domain(d3.range(datalength + 1)).range([0, 4, 5, 6, 7, 8]);\n\tvar oScale = d3.scaleQuantile().domain(d3.range(datalength + 1)).range([0, 0.3, 0.4, 0.5, 0.6, 0.7]);\n\t// var rScale = d3.scaleQuantize().domain([0, 9]).range(d3.range(10));\n\tvar yGrid = d3.axisBottom().tickValues([2, 9, 16, 23, 30]).tickFormat('').tickSize(unit.height - unit.padding * 2).scale(xScale);\n\tsvg.append('g').classed('y-grid', true).call(yGrid);\n\tvar xGrid = d3.axisRight().tickValues([2, 9, 16, 23, 30]).tickFormat('').tickSize(unit.width - unit.padding * 2).scale(yScale);\n\tsvg.append('g').classed('x-grid', true).call(xGrid);\n\tvar g = svg.append('g').classed('circle-group', true);\n\n\tfunction scatterPlot(){\n\t\tvar update = g.selectAll('circle').data(dataset);\n\t\tvar enter = update.enter();\n\t\tvar exit = update.exit();\n\n\t\tupdate.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr('cx', (d, i) => xScale(d.x))\n\t\t\t.attr('cy', (d, i) => yScale(d.y))\n\t\t\t.attr('r', (d, i) => rScale( datalength - dataset.length + i + 1))\n\t\t\t// .attr('opacity', (d, i) => oScale( datalength - dataset.length + i));\n\t\t\t.attr('fill', circleColor2)\n\t\t\t.attr('opacity', 0.3);\n\n\t\tenter.append('circle')\n\t\t\t.attr('cx', (d, i) => {\n\t\t\t\tif(dataset.length == 1){\n\t\t\t\t\treturn xScale(d.x);\n\t\t\t\t}else{\n\t\t\t\t\treturn xScale(dataset[i - 1].x);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.attr('cy', (d, i) => {\n\t\t\t\tif(dataset.length == 1){\n\t\t\t\t\treturn yScale(d.y);\n\t\t\t\t}else{\n\t\t\t\t\treturn yScale(dataset[i - 1].y);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.attr('r', (d, i) => {\n\t\t\t\tif(dataset.length == 1){\n\t\t\t\t\treturn 0;\n\t\t\t\t}else{\n\t\t\t\t\treturn rScale(i - 1);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.attr('fill', circleColor2)\n\t\t\t.attr('opacity', 0)\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t// .ease(d3.easeLinear)\n\t\t\t.attr('cx', (d, i) => xScale(d.x))\n\t\t\t.attr('cy', (d, i) => yScale(d.y))\n\t\t\t.attr('r', (d, i) => rScale((datalength)))\n\t\t\t// .attr('opacity', oScale(datalength))\n\t\t\t.attr('opacity', 1)\n\t\t\t.on('start',(d, i) => {\n\t\t\t\td3.select('.roller-possibility').text(parseInt(preScale(d.f) * 100) + '%')\n\t\t\t\td3.select('.roller-location').text('(' + d.x + ', ' + d.y + ')')\n\t\t\t\tsvg.append('circle')\n\t\t\t\t\t.classed('blink', true)\n\t\t\t\t\t.attr('cx', () => {\n\t\t\t\t\t\tif(dataset.length == 1){\n\t\t\t\t\t\t\treturn xScale(d.x);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn xScale(dataset[i - 1].x);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.attr('cy', () => {\n\t\t\t\t\t\tif(dataset.length == 1){\n\t\t\t\t\t\t\treturn yScale(d.y);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn yScale(dataset[i - 1].y);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.attr('r', 0)\n\t\t\t\t\t.attr('fill', circleColor2)\n\t\t\t\t\t.attr('opacity', 1)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(duration)\n\t\t\t\t\t// .ease(d3.easeLinear)\n\t\t\t\t\t.attr('cx', xScale(d.x))\n\t\t\t\t\t.attr('cy', yScale(d.y))\n\t\t\t\t\t.attr('opacity', 0)\n\t\t\t\t\t.attr('r', 30)\n\t\t\t\t\t.on('end', function(){\n\t\t\t\t\t\td3.select(this).remove();\n\t\t\t\t\t});\n\t\t\t\tvar location = svg.select('.location');\n\t\t\t\tif(location.empty()){\n\t\t\t\t\tlocation = svg.append('text').classed('location',true)\n\t\t\t\t\t\t\t\t\t.text('(0, 0)')\n\t\t\t\t\t\t\t\t\t.attr('text-anchor', 'start')\n\t\t\t\t\t\t\t\t\t.attr('transform','translate(' + (unit.width - unit.padding) + ', 0)')\n\t\t\t\t\t\t\t\t\t.attr('font-size', 40)\n\t\t\t\t\t\t\t\t\t.style('text-shadow', '2px 2px 2px #000')\n\t\t\t\t\t\t\t\t\t// .attr('opacity', oScale(datalength))\n\t\t\t\t\t\t\t\t\t// .attr('opacity', 0.7)\n\t\t\t\t\t\t\t\t\t.attr('dx', -140)\n\t\t\t\t\t\t\t\t\t.attr('dy', -130);\n\t\t\t\t}\n\t\t\t\tvar text = location.text();\n\t\t\t\tvar split = text.split(', ');\n\t\t\t\tvar x = split[0].split('(')[1];\n\t\t\t\tvar y = split[1].split(')')[0];\n\t\t\t\tlocation.transition().duration(duration)\n\t\t\t\t\t\t.tween('xyChange', () => {\n\t\t\t\t\t\t\tvar xInter = d3.interpolateRound(x, d.x);\n\t\t\t\t\t\t\tvar yInter = d3.interpolateRound(y, d.y);\n\t\t\t\t\t\t\treturn function(t) {\n\t\t\t\t\t\t\t    location.attr('fill', '#1781C4').text('(' + xInter(t) + ', ' + yInter(t) + ')');\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t});\n\t\t\t});\n\n\t}\n\n\tvar $line = $('.roller-line-chart');\n\tvar width2 = $line.width();\n\tvar unit2 = {width: width2, height: width, padding: width2/10}\n\tvar svg2 = d3.select('.roller-line-chart').append('svg').attr('preserveAspectRatio', 'xMidYMid meet').attr('viewBox', '0 0 ' + unit2.width + ' ' + unit2.height)\n\t\t\t\t.append('g').attr('transform', 'translate(' + unit2.padding + ',' + unit2.padding + ')');\n\tvar xScale2 = d3.scaleLinear().domain([ 1, datalength]).range([0, unit2.width - unit2.padding * 2]);\n\tvar preScale = d3.scaleLinear().domain([0, 255]).range([0, 1]);\n\tvar yScale2 = d3.scaleLinear().domain([0, 1]).range([unit2.height - unit2.padding * 2, 0]);\n\tvar rScale2 = d3.scaleQuantile().domain(d3.range(datalength)).range([4, 6, 8, 10, 12]);\n\tvar oScale2 = d3.scaleQuantile().domain(d3.range(datalength)).range([0.3, 0.4, 0.5, 0.6, 0.7]);\n\t// var rScale = d3.scaleQuantize().domain([0, 9]).range(d3.range(10));\n\tvar xAxis2 = d3.axisBottom().tickValues(d3.range(1, datalength + 1)).tickFormat(d3.format('d')).scale(xScale2);\n\tsvg2.append('g').classed('x-axis', true).attr('transform', 'translate(' + unit2.padding/2 + ',' + (unit2.height - unit2.padding*2) + ')').call(xAxis2);\n\tvar yAxis2 = d3.axisRight().tickValues(d3.range(0, 1.25, 0.25)).tickSize(0).tickFormat(d3.format('.0%')).scale(yScale2);\n\tsvg2.append('g').classed('y-axis', true).attr('transform', 'translate( -36, -10)').call(yAxis2);\n\tvar xGrid2 = d3.axisRight().tickValues(d3.range(0, 1.25, 0.25)).tickFormat('').tickSize(unit2.width).scale(yScale2);\n\tsvg2.append('g').classed('x-grid', true).attr('transform', 'translate(' + -unit2.padding + ', 0)').call(xGrid2);\n\tvar g2 = svg2.append('g').classed('line-group', true).attr('transform', 'translate(' + unit2.padding/2 + ', 0)');\n\n\t// var svg3 = d3.select('.roller-percentage').attr('svg').attr('width', 40).attr('height', 40).append('text').text('xxx').attr('dx', 10).attr('dy', 10);\n\n\tsvg2.append('defs').append('marker')\n\t\t\t.attr('id', 'linePoint')\n\t\t\t.attr('viewBox', '0 0 12 12')\n\t\t\t.attr('refX', '6')\n\t\t\t.attr('refY', '6')\n\t\t\t.attr('markerHeight', '6')\n\t\t\t.attr('markerWidth', '6')\n\t\t\t.attr('orient', 'auto')\n\t\t\t.append('circle')\n\t\t\t.attr('cx', 6)\n\t\t\t.attr('cy', 6)\n\t\t\t.attr('r', 6)\n\t\t\t.attr('fill', circleColor);\n\n\tfunction linePlot(){\n\t\tif(dataset.length == 1){\n\t\t\tg2.append('circle').classed('noOneCircle', true).data(dataset)\n\t\t\t\t.attr('cx', (d, i) => xScale2(i + 1))\n\t\t\t\t.attr('cy', (d) => yScale2(preScale(d.f)))\n\t\t\t\t.attr('fill', 'black')\n\t\t\t\t.attr('r', 0)\n\t\t\t\t.attr('fill', circleColor)\n\t\t\t\t.attr('opacity', 0)\n\t\t\t\t.transition()\n\t\t\t\t.duration(duration)\n\t\t\t\t.attr('r', 6)\n\t\t\t\t.attr('opacity', 1)\n\t\t\t\t.on('start', (d, i) => {\n\t\t\t\t\tsvg2.append('circle')\n\t\t\t\t\t\t.classed('blink', true)\n\t\t\t\t\t\t.attr('cx', () => xScale2(i + 1))\n\t\t\t\t\t\t.attr('cy', () => yScale2(preScale(d.f)))\n\t\t\t\t\t\t.attr('transform', 'translate(' + unit2.padding/2 + ', 0)')\n\t\t\t\t\t\t.attr('r', 0)\n\t\t\t\t\t\t.attr('fill', circleColor)\n\t\t\t\t\t\t.attr('opacity', 1)\n\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t.duration(duration)\n\t\t\t\t\t\t.attr('opacity', 0)\n\t\t\t\t\t\t.attr('r', 30)\n\t\t\t\t\t\t.on('end', function(){\n\t\t\t\t\t\t\td3.select(this).remove();\n\t\t\t\t\t\t});\n\t\t\t\t\tvar location = svg2.select('.location');\n\t\t\t\t\tif(location.empty()){\n\t\t\t\t\t\tlocation = svg2.append('text').classed('location',true)\n\t\t\t\t\t\t\t\t\t\t.text('0%(0)')\n\t\t\t\t\t\t\t\t\t\t.attr('text-anchor', 'start')\n\t\t\t\t\t\t\t\t\t\t.attr('transform','translate(' + (unit2.width - unit2.padding) + ', 0)')\n\t\t\t\t\t\t\t\t\t\t.attr('font-size', 40)\n\t\t\t\t\t\t\t\t\t\t.style('text-shadow', '2px 2px 2px #000')\n\t\t\t\t\t\t\t\t\t\t// .attr('opacity', oScale(datalength))\n\t\t\t\t\t\t\t\t\t\t// .attr('opacity', 0.7)\n\t\t\t\t\t\t\t\t\t\t.attr('dx', -180)\n\t\t\t\t\t\t\t\t\t\t.attr('dy', -150);\n\t\t\t\t\t}\n\t\t\t\t\tvar text = location.text();\n\t\t\t\t\tvar split = text.split('%');\n\t\t\t\t\tvar p = split[0];\n\t\t\t\t\tvar f = split[1].split('(')[1].split(')')[0];\n\t\t\t\t\tlocation.transition().duration(duration)\n\t\t\t\t\t\t.tween('pfChange', () => {\n\t\t\t\t\t\t\tvar pInter = d3.interpolateRound(p, preScale(d.f*100));\n\t\t\t\t\t\t\tvar fInter = d3.interpolateRound(f, d.f);\n\t\t\t\t\t\t\treturn function(t) {\n\t\t\t\t\t\t\t    location.attr('fill', '#C41781').text(pInter(t) + '%(' + fInter(t) + ')');\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar noOneCircle = d3.select('.noOneCircle');\n\t\tif(!noOneCircle.empty()) noOneCircle.remove();\n\n\t\t// console.log(lineset);\n\n\t\tvar update = g2.selectAll('path').data(lineset);\n\t\tvar enter = update.enter();\n\t\tvar exit = update.exit();\n\n\t\tvar linePath = d3.line().x((d, i) => xScale2(i + 1)).y((d) => yScale2(preScale(d.f)));\n\n\t\tupdate.attr('stroke-dashoffset', 0)\n\t\t\t.attr('stroke', circleColor)\n\t\t\t.attr('stroke-width', 2)\n\t\t\t.attr('fill', 'none')\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.attr('transform', (d, i) => {\n\t\t\t\tvar trans = xScale2(i + 1);\n\t\t\t\tif(lineset.length >= datalength){\n\t\t\t\t\tvar trans = xScale2(i);\n\t\t\t\t}\n\t\t\t\treturn 'translate(' + trans + ', 0)';\n\t\t\t});\n\n\t\tvar enterPath = \n\t\t\tenter.append('path')\n\t\t\t.attr('d', d => linePath(d))\n\t\t\t.attr('transform', (d, i) => {\n\t\t\t\tvar trans = xScale2(i + 1);\n\t\t\t\tif(lineset.length >= datalength + 1){\n\t\t\t\t\ttrans = xScale2(datalength);\n\t\t\t\t}\n\t\t\t\treturn 'translate(' + trans + ', 0)';\n\t\t\t})\n\t\t\t.attr('stroke', circleColor)\n\t\t\t.attr('stroke-width', 2)\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('opacity', 1)\n\t\t\t.attr('marker-start', 'url(#linePoint)');\n\n\t\tvar pathLength = enterPath.node().getTotalLength();\n\n\t\tenterPath\n\t\t\t.attr('stroke-dasharray', pathLength + ' ' + pathLength)\n\t\t\t.attr('stroke-dashoffset', pathLength)\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.attr('stroke-dashoffset', 0)\n\t\t\t.on('start', (d, i) => {\n\t\t\t\tsvg2.append('circle')\n\t\t\t\t\t.classed('blink', true)\n\t\t\t\t\t.attr('cx', () => xScale2(i + 1))\n\t\t\t\t\t.attr('cy', () => yScale2(preScale(d[1].f)))\n\t\t\t\t\t.attr('transform', () => {\n\t\t\t\t\t\tvar trans = xScale2(2) + unit2.padding/2;\n\t\t\t\t\t\tif(i >= datalength - 1){\n\t\t\t\t\t\t\ttrans = unit2.padding/2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 'translate(' + trans + ', 0)';\n\t\t\t\t\t})\n\t\t\t\t\t.attr('r', 0)\n\t\t\t\t\t.attr('fill', circleColor)\n\t\t\t\t\t.attr('opacity', 1)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(duration)\n\t\t\t\t\t// .ease(d3.easeLinear)\n\t\t\t\t\t.attr('opacity', 0)\n\t\t\t\t\t.attr('r', 30)\n\t\t\t\t\t.on('end', function(){\n\t\t\t\t\t\td3.select(this).remove();\n\t\t\t\t\t});\n\t\t\t\tsvg2.append('circle')\n\t\t\t\t\t.classed('blink', true)\n\t\t\t\t\t.attr('cx', () => xScale2(i + 1))\n\t\t\t\t\t.attr('cy', () => yScale2(preScale(d[1].f)))\n\t\t\t\t\t.attr('transform', () => {\n\t\t\t\t\t\tvar trans = xScale2(2) + unit2.padding/2;\n\t\t\t\t\t\tif(i >= datalength - 1){\n\t\t\t\t\t\t\ttrans = unit2.padding/2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 'translate(' + trans + ', 0)';\n\t\t\t\t\t})\n\t\t\t\t\t.attr('r', 0)\n\t\t\t\t\t.attr('fill', circleColor)\n\t\t\t\t\t.attr('opacity', 0)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(duration)\n\t\t\t\t\t// .ease(d3.easeLinear)\n\t\t\t\t\t.attr('opacity', 1)\n\t\t\t\t\t.attr('r', 6)\n\t\t\t\t\t.on('end', function(){\n\t\t\t\t\t\td3.select(this).remove();\n\t\t\t\t\t});\n\t\t\t\tvar location = svg2.select('.location');\n\t\t\t\tif(location.empty()){\n\t\t\t\t\tlocation = svg2.append('text').classed('location',true)\n\t\t\t\t\t\t\t\t\t.text('0%(0)')\n\t\t\t\t\t\t\t\t\t.attr('text-anchor', 'start')\n\t\t\t\t\t\t\t\t\t.attr('transform','translate(' + (unit2.width/2 - unit2.padding) + ', 0)')\n\t\t\t\t\t\t\t\t\t.attr('font-size', 40)\n\t\t\t\t\t\t\t\t\t.style('text-shadow', '2px 2px 2px #000')\n\t\t\t\t\t\t\t\t\t// .attr('opacity', oScale(datalength))\n\t\t\t\t\t\t\t\t\t// .attr('opacity', 0.7)\n\t\t\t\t\t\t\t\t\t.attr('dx', -180)\n\t\t\t\t\t\t\t\t\t.attr('dy', -150);\n\t\t\t\t}\n\t\t\t\tvar text = location.text();\n\t\t\t\tvar split = text.split('%');\n\t\t\t\tvar p = split[0];\n\t\t\t\tvar f = split[1].split('(')[1].split(')')[0];\n\t\t\t\tlocation.transition().duration(duration)\n\t\t\t\t\t\t.tween('pfChange', () => {\n\t\t\t\t\t\t\tvar pInter = d3.interpolateRound(p, preScale(d[1].f*100));\n\t\t\t\t\t\t\tvar fInter = d3.interpolateRound(f, d[1].f);\n\t\t\t\t\t\t\treturn function(t) {\n\t\t\t\t\t\t\t    location.text(pInter(t) + '%(' + fInter(t) + ')');\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t});\n\t\t\t})\n\t\t\t.filter((d, i) => i >= datalength - 1)\n\t\t\t.attr('transform', (d, i) => {\n\t\t\t\t\treturn 'translate(' + xScale2(datalength - 1) + ', 0)';\n\t\t\t\t});\n\t}\n\n\tfunction piePlot(){\n\t\tvar dataset1 = [20, 80];\n\t\tvar dataset2 = [45, 55];\n\t\tvar dataset3 = [100];\n\t\tvar $coordinate = $('.roller-coordinate');\n\t\tvar width = $coordinate.width();\n\t\tvar height = width*2/3;\n\t\tvar svg = d3.select('.roller-coordinate').append('svg').attr('width', width).attr('height', height);\n\t\tvar outer = height/2*0.8;\n\t\tvar space = 14;\n\t\tvar radius = { inner: outer - space, outer: outer};\n\t\tvar radius2 = { inner: outer - space*2, outer: outer - space};\n\t\tvar radius3 = { inner: outer - space*2, outer: outer};\n\t\tvar pie = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset1);\n\n\t\tvar pie2 = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset2);\n\n\t\tvar pie3 = d3.pie()\n\t\t\t\t\t.startAngle(() => 1.25 * Math.PI)(dataset3);\n\n\t\tvar arc = d3.arc()\n\t\t\t\t\t.innerRadius(radius.inner)\n\t\t\t\t\t.outerRadius(radius.outer);\n\n\t\tvar arc2 = d3.arc()\n\t\t\t\t\t.innerRadius(radius2.inner)\n\t\t\t\t\t.outerRadius(radius2.outer);\n\n\t\tvar arc3 = d3.arc()\n\t\t\t\t\t.innerRadius(radius3.inner)\n\t\t\t\t\t.outerRadius(radius3.outer);\n\n\t\tvar g = svg.selectAll('.g1').data(pie).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg.append('path')\n\t\t\t.attr('d', (d) => arc(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#51A1D3'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g2 = svg.selectAll('.g2').data(pie2).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg2.append('path')\n\t\t\t.attr('d', (d) => arc2(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#A8D0E9'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g3 = svg.selectAll('.g3').data(pie3).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\t// g3.append('path')\n\t\t// \t.attr('d', (d) => arc3(d))\n\t\t// \t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t// \t.attr('fill', 'slategray'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\n\t}\n\n\tfunction piePlot2(){\n\t\tvar dataset1 = [20, 80];\n\t\tvar dataset2 = [45, 55];\n\t\tvar dataset3 = [100];\n\t\tvar $percentage = $('.roller-percentage');\n\t\tvar width = $percentage.width();\n\t\tvar height = width*2/3;\n\t\tvar svg = d3.select('.roller-percentage').append('svg').attr('width', width).attr('height', height);\n\t\tvar outer = height/2*0.8;\n\t\tvar space = 14;\n\t\tvar radius = { inner: outer - space, outer: outer};\n\t\tvar radius2 = { inner: outer - space*2, outer: outer - space};\n\t\tvar radius3 = { inner: outer - space*2, outer: outer};\n\t\tvar pie = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset1);\n\n\t\tvar pie2 = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset2);\n\n\t\tvar pie3 = d3.pie()\n\t\t\t\t\t.startAngle(() => 1.25 * Math.PI)(dataset3);\n\n\t\tvar arc = d3.arc()\n\t\t\t\t\t.innerRadius(radius.inner)\n\t\t\t\t\t.outerRadius(radius.outer);\n\n\t\tvar arc2 = d3.arc()\n\t\t\t\t\t.innerRadius(radius2.inner)\n\t\t\t\t\t.outerRadius(radius2.outer);\n\n\t\tvar arc3 = d3.arc()\n\t\t\t\t\t.innerRadius(radius3.inner)\n\t\t\t\t\t.outerRadius(radius3.outer);\n\n\t\tvar g = svg.selectAll('.g1').data(pie).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg.append('path')\n\t\t\t.attr('d', (d) => arc(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#D351A1'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g2 = svg.selectAll('.g2').data(pie2).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg2.append('path')\n\t\t\t.attr('d', (d) => arc2(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#E28BC0'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g3 = svg.selectAll('.g3').data(pie3).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\t// g3.append('path')\n\t\t// \t.attr('d', (d) => arc3(d))\n\t\t// \t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t// \t.attr('fill', 'slategray'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\n\t}\n\n\tfunction piePlot3(){\n\t\tvar dataset1 = [20, 80];\n\t\tvar dataset2 = [45, 55];\n\t\tvar dataset3 = [100];\n\t\tvar $temperature = $('.roller-temperature');\n\t\tvar width = $temperature.width();\n\t\tvar height = width*2/3;\n\t\tvar svg = d3.select('.roller-temperature').append('svg').attr('width', width).attr('height', height);\n\t\tvar outer = height/2*0.8;\n\t\tvar space = 14;\n\t\tvar radius = { inner: outer - space, outer: outer};\n\t\tvar radius2 = { inner: outer - space*2, outer: outer - space};\n\t\tvar radius3 = { inner: outer - space*2, outer: outer};\n\t\tvar pie = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset1);\n\n\t\tvar pie2 = d3.pie()\n\t\t\t\t\t// .value((d) => d.count) // 設定value為dataset裡的什麼值，不加則dataset必須為資料的陣列\n\t\t\t\t\t// .sort(function(a, b) { return a.name.localeCompare(b.name); }) // 由dataset裡的某值做排序，不加則startAngle的順序會依value大到小排列\n\t\t\t\t\t// .sortValues((a, b) => a - b) // 依values的大小排列，與上行可擇一撰寫\n\t\t\t\t\t// .startAngle(() => 0) // 設定起始的角度，預設為0\n\t\t\t\t\t.endAngle(() => 1.25 * Math.PI) // 設定終止的角度，預設為2π\n\t\t\t\t\t// .padAngle(() => 0.03) // 設定arc之間的空隙，預設為0 (you can google \"pie padding animation\" for Mike's work)\n\t\t\t\t\t(dataset2);\n\n\t\tvar pie3 = d3.pie()\n\t\t\t\t\t.startAngle(() => 1.25 * Math.PI)(dataset3);\n\n\t\tvar arc = d3.arc()\n\t\t\t\t\t.innerRadius(radius.inner)\n\t\t\t\t\t.outerRadius(radius.outer);\n\n\t\tvar arc2 = d3.arc()\n\t\t\t\t\t.innerRadius(radius2.inner)\n\t\t\t\t\t.outerRadius(radius2.outer);\n\n\t\tvar arc3 = d3.arc()\n\t\t\t\t\t.innerRadius(radius3.inner)\n\t\t\t\t\t.outerRadius(radius3.outer);\n\n\t\tvar g = svg.selectAll('.g1').data(pie).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg.append('path')\n\t\t\t.attr('d', (d) => arc(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#A1D351'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g2 = svg.selectAll('.g2').data(pie2).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\tg2.append('path')\n\t\t\t.attr('d', (d) => arc2(d))\n\t\t\t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t\t.attr('fill', '#C0E28B'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\t\tvar g3 = svg.selectAll('.g3').data(pie3).enter().append('g').attr('transform', 'translate(' + width*3/5 + ', ' + height/2 + ')');\n\t\t// g3.append('path')\n\t\t// \t.attr('d', (d) => arc3(d))\n\t\t// \t.attr('opacity', (d, i) => (i + 1) * 0.5)\n\t\t// \t.attr('fill', 'slategray'); // 有20種color，用陣列方式讀取，index超過19會變黑色\n\n\t}\n\n\tfunction getRandomData(){\n\t\tvar x = ~~(Math.random()*32);\n\t\tvar y = ~~(Math.random()*32);\n\t\tvar f = ~~(Math.random()*256);\n\t\tif(dataset.length == datalength + 1){\n\t\t\tdataset.shift(); \n\t\t\tg.selectAll('circle').filter((d, i) => i == 0).remove();\n\t\t}\n\t\tdataset.push({x: x, y: y, f: f});\n\t\tif(lineset.length == datalength){\n\t\t\tlineset.shift(); \n\t\t\tg2.selectAll('path').filter((d, i) => i == 0).remove();\n\t\t}\n\t\tif(dataset.length > 1){\n\t\t\tvar start = dataset[dataset.length-2];\n\t\t\tvar end = dataset[dataset.length-1];\n\t\t\tlineset.push([start, end]);\n\t\t}\n\t\t\n\t\tscatterPlot();\n\t\tlinePlot();\n\t}\n\n\t// piePlot();\n\t// piePlot2();\n\t// piePlot3();\n\n\tgetRandomData();\n\tsetInterval(getRandomData, duration);\n\n\tvar win = $(window);\n\t// resize宣告多次導致失效，改用trigger\n\twin.resize(function(){\n\t\twin.trigger('window:resize');\n\t});\n\n\twin.on('window:resize', function(){\n\t\tvar $scatter = $('.roller-scatter-chart');\n\t\tvar width = $scatter.width();\n\t\tconsole.log(width);\n\t\t// scatterPlot();\n\t});\n\n\twin.on('window:resize', function(){\n\t\tvar $scatter = $('.roller-scatter-chart');\n\t\tvar width = $scatter.width();\n\t\t// linePlot();\n\t});\n\n});\n"]}